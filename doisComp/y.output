Terminals unused in grammar

   KW_FLOAT
   KW_BOOL
   KW_DO
   TOKEN_ERROR


State 81 conflicts: 11 shift/reduce
State 82 conflicts: 11 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: statement_block

    2 statement_block: statement statement_block
    3                | /* empty */

    4 statement: declaracao
    5          | funcao

    6 declaracao: tipo TK_IDENTIFIER ';'
    7           | tipo TK_IDENTIFIER '[' LIT_INTEGER ']' ';'

    8 tipo: KW_INT
    9     | KW_CHAR

   10 funcao: tipo TK_IDENTIFIER '(' lista_parametros ')' bloco

   11 lista_parametros: parametro
   12                 | parametro ',' lista_parametros
   13                 | /* empty */

   14 parametro: tipo TK_IDENTIFIER

   15 bloco: '{' bloco_comandos '}'
   16      | comando ';'

   17 bloco_comandos: comando ';' bloco_comandos
   18               | comando

   19 comando: atribuicao
   20        | fluxo
   21        | KW_READ TK_IDENTIFIER
   22        | KW_PRINT expressao
   23        | KW_RETURN expressao
   24        | /* empty */

   25 atribuicao: TK_IDENTIFIER '=' expressao
   26           | TK_IDENTIFIER '[' expressao ']' '=' expressao

   27 expressao: '(' expressao ')'
   28          | TK_IDENTIFIER
   29          | TK_IDENTIFIER '[' expressao ']'
   30          | LIT_CHAR
   31          | LIT_STRING
   32          | LIT_INTEGER
   33          | LIT_FLOAT
   34          | LIT_FALSE
   35          | LIT_TRUE
   36          | logica
   37          | aritmetica

   38 aritmetica: expressao operador_aritmetico expressao

   39 operador_aritmetico: '+'
   40                    | '-'
   41                    | '*'
   42                    | '/'
   43                    | '%'

   44 logica: expressao operador_logico expressao

   45 operador_logico: OPERATOR_AND
   46                | OPERATOR_OR
   47                | OPERATOR_LE
   48                | OPERATOR_GE
   49                | OPERATOR_EQ
   50                | OPERATOR_NE

   51 fluxo: KW_IF '(' expressao ')' KW_THEN bloco
   52      | KW_IF '(' expressao ')' KW_THEN bloco KW_ELSE bloco
   53      | KW_WHILE '(' expressao ')' bloco


Terminals, with rules where they appear

$end (0) 0
'%' (37) 43
'(' (40) 10 27 51 52 53
')' (41) 10 27 51 52 53
'*' (42) 41
'+' (43) 39
',' (44) 12
'-' (45) 40
'/' (47) 42
';' (59) 6 7 16 17
'=' (61) 25 26
'[' (91) 7 26 29
']' (93) 7 26 29
'{' (123) 15
'}' (125) 15
error (256)
KW_INT (258) 8
KW_FLOAT (259)
KW_BOOL (260)
KW_CHAR (261) 9
KW_IF (262) 51 52
KW_THEN (263) 51 52
KW_ELSE (264) 52
KW_WHILE (265) 53
KW_DO (266)
KW_PRINT (267) 22
KW_RETURN (268) 23
KW_READ (269) 21
OPERATOR_LE (270) 47
OPERATOR_GE (271) 48
OPERATOR_EQ (272) 49
OPERATOR_NE (273) 50
OPERATOR_AND (274) 45
OPERATOR_OR (275) 46
TK_IDENTIFIER (276) 6 7 10 14 21 25 26 28 29
LIT_INTEGER (277) 7 32
LIT_FLOAT (278) 33
LIT_FALSE (279) 34
LIT_TRUE (280) 35
LIT_CHAR (281) 30
LIT_STRING (282) 31
TOKEN_ERROR (283)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
programa (44)
    on left: 1, on right: 0
statement_block (45)
    on left: 2 3, on right: 1 2
statement (46)
    on left: 4 5, on right: 2
declaracao (47)
    on left: 6 7, on right: 4
tipo (48)
    on left: 8 9, on right: 6 7 10 14
funcao (49)
    on left: 10, on right: 5
lista_parametros (50)
    on left: 11 12 13, on right: 10 12
parametro (51)
    on left: 14, on right: 11 12
bloco (52)
    on left: 15 16, on right: 10 51 52 53
bloco_comandos (53)
    on left: 17 18, on right: 15 17
comando (54)
    on left: 19 20 21 22 23 24, on right: 16 17 18
atribuicao (55)
    on left: 25 26, on right: 19
expressao (56)
    on left: 27 28 29 30 31 32 33 34 35 36 37, on right: 22 23 25 26
    27 29 38 44 51 52 53
aritmetica (57)
    on left: 38, on right: 37
operador_aritmetico (58)
    on left: 39 40 41 42 43, on right: 38
logica (59)
    on left: 44, on right: 36
operador_logico (60)
    on left: 45 46 47 48 49 50, on right: 44
fluxo (61)
    on left: 51 52 53, on right: 20


state 0

    0 $accept: . programa $end

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 3 (statement_block)

    programa         go to state 3
    statement_block  go to state 4
    statement        go to state 5
    declaracao       go to state 6
    tipo             go to state 7
    funcao           go to state 8


state 1

    8 tipo: KW_INT .

    $default  reduce using rule 8 (tipo)


state 2

    9 tipo: KW_CHAR .

    $default  reduce using rule 9 (tipo)


state 3

    0 $accept: programa . $end

    $end  shift, and go to state 9


state 4

    1 programa: statement_block .

    $default  reduce using rule 1 (programa)


state 5

    2 statement_block: statement . statement_block

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 3 (statement_block)

    statement_block  go to state 10
    statement        go to state 5
    declaracao       go to state 6
    tipo             go to state 7
    funcao           go to state 8


state 6

    4 statement: declaracao .

    $default  reduce using rule 4 (statement)


state 7

    6 declaracao: tipo . TK_IDENTIFIER ';'
    7           | tipo . TK_IDENTIFIER '[' LIT_INTEGER ']' ';'
   10 funcao: tipo . TK_IDENTIFIER '(' lista_parametros ')' bloco

    TK_IDENTIFIER  shift, and go to state 11


state 8

    5 statement: funcao .

    $default  reduce using rule 5 (statement)


state 9

    0 $accept: programa $end .

    $default  accept


state 10

    2 statement_block: statement statement_block .

    $default  reduce using rule 2 (statement_block)


state 11

    6 declaracao: tipo TK_IDENTIFIER . ';'
    7           | tipo TK_IDENTIFIER . '[' LIT_INTEGER ']' ';'
   10 funcao: tipo TK_IDENTIFIER . '(' lista_parametros ')' bloco

    ';'  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14


state 12

    6 declaracao: tipo TK_IDENTIFIER ';' .

    $default  reduce using rule 6 (declaracao)


state 13

    7 declaracao: tipo TK_IDENTIFIER '[' . LIT_INTEGER ']' ';'

    LIT_INTEGER  shift, and go to state 15


state 14

   10 funcao: tipo TK_IDENTIFIER '(' . lista_parametros ')' bloco

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 13 (lista_parametros)

    tipo              go to state 16
    lista_parametros  go to state 17
    parametro         go to state 18


state 15

    7 declaracao: tipo TK_IDENTIFIER '[' LIT_INTEGER . ']' ';'

    ']'  shift, and go to state 19


state 16

   14 parametro: tipo . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 20


state 17

   10 funcao: tipo TK_IDENTIFIER '(' lista_parametros . ')' bloco

    ')'  shift, and go to state 21


state 18

   11 lista_parametros: parametro .
   12                 | parametro . ',' lista_parametros

    ','  shift, and go to state 22

    $default  reduce using rule 11 (lista_parametros)


state 19

    7 declaracao: tipo TK_IDENTIFIER '[' LIT_INTEGER ']' . ';'

    ';'  shift, and go to state 23


state 20

   14 parametro: tipo TK_IDENTIFIER .

    $default  reduce using rule 14 (parametro)


state 21

   10 funcao: tipo TK_IDENTIFIER '(' lista_parametros ')' . bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 30

    $default  reduce using rule 24 (comando)

    bloco       go to state 31
    comando     go to state 32
    atribuicao  go to state 33
    fluxo       go to state 34


state 22

   12 lista_parametros: parametro ',' . lista_parametros

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 13 (lista_parametros)

    tipo              go to state 16
    lista_parametros  go to state 35
    parametro         go to state 18


state 23

    7 declaracao: tipo TK_IDENTIFIER '[' LIT_INTEGER ']' ';' .

    $default  reduce using rule 7 (declaracao)


state 24

   51 fluxo: KW_IF . '(' expressao ')' KW_THEN bloco
   52      | KW_IF . '(' expressao ')' KW_THEN bloco KW_ELSE bloco

    '('  shift, and go to state 36


state 25

   53 fluxo: KW_WHILE . '(' expressao ')' bloco

    '('  shift, and go to state 37


state 26

   22 comando: KW_PRINT . expressao

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 46
    aritmetica  go to state 47
    logica      go to state 48


state 27

   23 comando: KW_RETURN . expressao

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 49
    aritmetica  go to state 47
    logica      go to state 48


state 28

   21 comando: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 50


state 29

   25 atribuicao: TK_IDENTIFIER . '=' expressao
   26           | TK_IDENTIFIER . '[' expressao ']' '=' expressao

    '['  shift, and go to state 51
    '='  shift, and go to state 52


state 30

   15 bloco: '{' . bloco_comandos '}'

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29

    $default  reduce using rule 24 (comando)

    bloco_comandos  go to state 53
    comando         go to state 54
    atribuicao      go to state 33
    fluxo           go to state 34


state 31

   10 funcao: tipo TK_IDENTIFIER '(' lista_parametros ')' bloco .

    $default  reduce using rule 10 (funcao)


state 32

   16 bloco: comando . ';'

    ';'  shift, and go to state 55


state 33

   19 comando: atribuicao .

    $default  reduce using rule 19 (comando)


state 34

   20 comando: fluxo .

    $default  reduce using rule 20 (comando)


state 35

   12 lista_parametros: parametro ',' lista_parametros .

    $default  reduce using rule 12 (lista_parametros)


state 36

   51 fluxo: KW_IF '(' . expressao ')' KW_THEN bloco
   52      | KW_IF '(' . expressao ')' KW_THEN bloco KW_ELSE bloco

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 56
    aritmetica  go to state 47
    logica      go to state 48


state 37

   53 fluxo: KW_WHILE '(' . expressao ')' bloco

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 57
    aritmetica  go to state 47
    logica      go to state 48


state 38

   28 expressao: TK_IDENTIFIER .
   29          | TK_IDENTIFIER . '[' expressao ']'

    '['  shift, and go to state 58

    $default  reduce using rule 28 (expressao)


state 39

   32 expressao: LIT_INTEGER .

    $default  reduce using rule 32 (expressao)


state 40

   33 expressao: LIT_FLOAT .

    $default  reduce using rule 33 (expressao)


state 41

   34 expressao: LIT_FALSE .

    $default  reduce using rule 34 (expressao)


state 42

   35 expressao: LIT_TRUE .

    $default  reduce using rule 35 (expressao)


state 43

   30 expressao: LIT_CHAR .

    $default  reduce using rule 30 (expressao)


state 44

   31 expressao: LIT_STRING .

    $default  reduce using rule 31 (expressao)


state 45

   27 expressao: '(' . expressao ')'

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 59
    aritmetica  go to state 47
    logica      go to state 48


state 46

   22 comando: KW_PRINT expressao .
   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    '%'           shift, and go to state 70

    $default  reduce using rule 22 (comando)

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 47

   37 expressao: aritmetica .

    $default  reduce using rule 37 (expressao)


state 48

   36 expressao: logica .

    $default  reduce using rule 36 (expressao)


state 49

   23 comando: KW_RETURN expressao .
   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    '%'           shift, and go to state 70

    $default  reduce using rule 23 (comando)

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 50

   21 comando: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 21 (comando)


state 51

   26 atribuicao: TK_IDENTIFIER '[' . expressao ']' '=' expressao

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 73
    aritmetica  go to state 47
    logica      go to state 48


state 52

   25 atribuicao: TK_IDENTIFIER '=' . expressao

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 74
    aritmetica  go to state 47
    logica      go to state 48


state 53

   15 bloco: '{' bloco_comandos . '}'

    '}'  shift, and go to state 75


state 54

   17 bloco_comandos: comando . ';' bloco_comandos
   18               | comando .

    ';'  shift, and go to state 76

    $default  reduce using rule 18 (bloco_comandos)


state 55

   16 bloco: comando ';' .

    $default  reduce using rule 16 (bloco)


state 56

   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao
   51 fluxo: KW_IF '(' expressao . ')' KW_THEN bloco
   52      | KW_IF '(' expressao . ')' KW_THEN bloco KW_ELSE bloco

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    ')'           shift, and go to state 77
    '%'           shift, and go to state 70

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 57

   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao
   53 fluxo: KW_WHILE '(' expressao . ')' bloco

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    ')'           shift, and go to state 78
    '%'           shift, and go to state 70

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 58

   29 expressao: TK_IDENTIFIER '[' . expressao ']'

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 79
    aritmetica  go to state 47
    logica      go to state 48


state 59

   27 expressao: '(' expressao . ')'
   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    ')'           shift, and go to state 80
    '%'           shift, and go to state 70

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 60

   47 operador_logico: OPERATOR_LE .

    $default  reduce using rule 47 (operador_logico)


state 61

   48 operador_logico: OPERATOR_GE .

    $default  reduce using rule 48 (operador_logico)


state 62

   49 operador_logico: OPERATOR_EQ .

    $default  reduce using rule 49 (operador_logico)


state 63

   50 operador_logico: OPERATOR_NE .

    $default  reduce using rule 50 (operador_logico)


state 64

   45 operador_logico: OPERATOR_AND .

    $default  reduce using rule 45 (operador_logico)


state 65

   46 operador_logico: OPERATOR_OR .

    $default  reduce using rule 46 (operador_logico)


state 66

   39 operador_aritmetico: '+' .

    $default  reduce using rule 39 (operador_aritmetico)


state 67

   40 operador_aritmetico: '-' .

    $default  reduce using rule 40 (operador_aritmetico)


state 68

   41 operador_aritmetico: '*' .

    $default  reduce using rule 41 (operador_aritmetico)


state 69

   42 operador_aritmetico: '/' .

    $default  reduce using rule 42 (operador_aritmetico)


state 70

   43 operador_aritmetico: '%' .

    $default  reduce using rule 43 (operador_aritmetico)


state 71

   38 aritmetica: expressao operador_aritmetico . expressao

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 81
    aritmetica  go to state 47
    logica      go to state 48


state 72

   44 logica: expressao operador_logico . expressao

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 82
    aritmetica  go to state 47
    logica      go to state 48


state 73

   26 atribuicao: TK_IDENTIFIER '[' expressao . ']' '=' expressao
   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    ']'           shift, and go to state 83
    '%'           shift, and go to state 70

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 74

   25 atribuicao: TK_IDENTIFIER '=' expressao .
   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    '%'           shift, and go to state 70

    $default  reduce using rule 25 (atribuicao)

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 75

   15 bloco: '{' bloco_comandos '}' .

    $default  reduce using rule 15 (bloco)


state 76

   17 bloco_comandos: comando ';' . bloco_comandos

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29

    $default  reduce using rule 24 (comando)

    bloco_comandos  go to state 84
    comando         go to state 54
    atribuicao      go to state 33
    fluxo           go to state 34


state 77

   51 fluxo: KW_IF '(' expressao ')' . KW_THEN bloco
   52      | KW_IF '(' expressao ')' . KW_THEN bloco KW_ELSE bloco

    KW_THEN  shift, and go to state 85


state 78

   53 fluxo: KW_WHILE '(' expressao ')' . bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 30

    $default  reduce using rule 24 (comando)

    bloco       go to state 86
    comando     go to state 32
    atribuicao  go to state 33
    fluxo       go to state 34


state 79

   29 expressao: TK_IDENTIFIER '[' expressao . ']'
   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    ']'           shift, and go to state 87
    '%'           shift, and go to state 70

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 80

   27 expressao: '(' expressao ')' .

    $default  reduce using rule 27 (expressao)


state 81

   38 aritmetica: expressao . operador_aritmetico expressao
   38           | expressao operador_aritmetico expressao .
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    '%'           shift, and go to state 70

    OPERATOR_LE   [reduce using rule 38 (aritmetica)]
    OPERATOR_GE   [reduce using rule 38 (aritmetica)]
    OPERATOR_EQ   [reduce using rule 38 (aritmetica)]
    OPERATOR_NE   [reduce using rule 38 (aritmetica)]
    OPERATOR_AND  [reduce using rule 38 (aritmetica)]
    OPERATOR_OR   [reduce using rule 38 (aritmetica)]
    '+'           [reduce using rule 38 (aritmetica)]
    '-'           [reduce using rule 38 (aritmetica)]
    '*'           [reduce using rule 38 (aritmetica)]
    '/'           [reduce using rule 38 (aritmetica)]
    '%'           [reduce using rule 38 (aritmetica)]
    $default      reduce using rule 38 (aritmetica)

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 82

   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao
   44       | expressao operador_logico expressao .

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    '%'           shift, and go to state 70

    OPERATOR_LE   [reduce using rule 44 (logica)]
    OPERATOR_GE   [reduce using rule 44 (logica)]
    OPERATOR_EQ   [reduce using rule 44 (logica)]
    OPERATOR_NE   [reduce using rule 44 (logica)]
    OPERATOR_AND  [reduce using rule 44 (logica)]
    OPERATOR_OR   [reduce using rule 44 (logica)]
    '+'           [reduce using rule 44 (logica)]
    '-'           [reduce using rule 44 (logica)]
    '*'           [reduce using rule 44 (logica)]
    '/'           [reduce using rule 44 (logica)]
    '%'           [reduce using rule 44 (logica)]
    $default      reduce using rule 44 (logica)

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 83

   26 atribuicao: TK_IDENTIFIER '[' expressao ']' . '=' expressao

    '='  shift, and go to state 88


state 84

   17 bloco_comandos: comando ';' bloco_comandos .

    $default  reduce using rule 17 (bloco_comandos)


state 85

   51 fluxo: KW_IF '(' expressao ')' KW_THEN . bloco
   52      | KW_IF '(' expressao ')' KW_THEN . bloco KW_ELSE bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 30

    $default  reduce using rule 24 (comando)

    bloco       go to state 89
    comando     go to state 32
    atribuicao  go to state 33
    fluxo       go to state 34


state 86

   53 fluxo: KW_WHILE '(' expressao ')' bloco .

    $default  reduce using rule 53 (fluxo)


state 87

   29 expressao: TK_IDENTIFIER '[' expressao ']' .

    $default  reduce using rule 29 (expressao)


state 88

   26 atribuicao: TK_IDENTIFIER '[' expressao ']' '=' . expressao

    TK_IDENTIFIER  shift, and go to state 38
    LIT_INTEGER    shift, and go to state 39
    LIT_FLOAT      shift, and go to state 40
    LIT_FALSE      shift, and go to state 41
    LIT_TRUE       shift, and go to state 42
    LIT_CHAR       shift, and go to state 43
    LIT_STRING     shift, and go to state 44
    '('            shift, and go to state 45

    expressao   go to state 90
    aritmetica  go to state 47
    logica      go to state 48


state 89

   51 fluxo: KW_IF '(' expressao ')' KW_THEN bloco .
   52      | KW_IF '(' expressao ')' KW_THEN bloco . KW_ELSE bloco

    KW_ELSE  shift, and go to state 91

    $default  reduce using rule 51 (fluxo)


state 90

   26 atribuicao: TK_IDENTIFIER '[' expressao ']' '=' expressao .
   38 aritmetica: expressao . operador_aritmetico expressao
   44 logica: expressao . operador_logico expressao

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_NE   shift, and go to state 63
    OPERATOR_AND  shift, and go to state 64
    OPERATOR_OR   shift, and go to state 65
    '+'           shift, and go to state 66
    '-'           shift, and go to state 67
    '*'           shift, and go to state 68
    '/'           shift, and go to state 69
    '%'           shift, and go to state 70

    $default  reduce using rule 26 (atribuicao)

    operador_aritmetico  go to state 71
    operador_logico      go to state 72


state 91

   52 fluxo: KW_IF '(' expressao ')' KW_THEN bloco KW_ELSE . bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 30

    $default  reduce using rule 24 (comando)

    bloco       go to state 92
    comando     go to state 32
    atribuicao  go to state 33
    fluxo       go to state 34


state 92

   52 fluxo: KW_IF '(' expressao ')' KW_THEN bloco KW_ELSE bloco .

    $default  reduce using rule 52 (fluxo)
