Terminals unused in grammar

   KW_FLOAT
   KW_BOOL
   KW_DO
   TOKEN_ERROR


Rules useless in parser due to conflicts

   53 string: LIT_STRING


State 29 conflicts: 1 reduce/reduce
State 32 conflicts: 1 shift/reduce
State 45 conflicts: 13 reduce/reduce
State 51 conflicts: 12 reduce/reduce
State 60 conflicts: 1 reduce/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 86 conflicts: 1 reduce/reduce
State 95 conflicts: 6 shift/reduce
State 101 conflicts: 2 shift/reduce
State 102 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 107 conflicts: 2 shift/reduce
State 108 conflicts: 2 shift/reduce
State 109 conflicts: 2 shift/reduce
State 110 conflicts: 2 shift/reduce
State 111 conflicts: 12 shift/reduce
State 112 conflicts: 12 shift/reduce
State 117 conflicts: 6 shift/reduce
State 122 conflicts: 1 shift/reduce
State 124 conflicts: 6 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: statement_block

    2 statement_block: statement statement_block
    3                | /* empty */

    4 statement: declaracao
    5          | funcao

    6 identifier: TK_IDENTIFIER

    7 declaracao: tipo identifier ';'
    8           | tipo identifier '[' LIT_INTEGER ']' ';'

    9 tipo: KW_INT
   10     | KW_CHAR

   11 funcao: tipo identifier '(' lista_parametros ')' bloco

   12 lista_parametros: parametro
   13                 | parametro ',' lista_parametros
   14                 | /* empty */

   15 parametro: tipo identifier

   16 bloco: '{' bloco_comandos '}'
   17      | comando
   18      | comando ';'
   19      | fluxo

   20 bloco_comandos: comando ';' bloco_comandos
   21               | comando
   22               | fluxo bloco_comandos
   23               | fluxo
   24               | /* empty */

   25 comando: atribuicao
   26        | chamada_funcao
   27        | KW_READ identifier
   28        | KW_PRINT aritmetica
   29        | KW_PRINT string
   30        | KW_PRINT '(' string ')'
   31        | KW_PRINT expressao
   32        | KW_PRINT '(' expressao ')'
   33        | KW_RETURN expressao
   34        | /* empty */

   35 chamada_funcao: identifier '(' lista_param_chamada ')'

   36 lista_param_chamada: identifier
   37                    | identifier ',' lista_param_chamada
   38                    | /* empty */

   39 atribuicao: identifier '=' expressao
   40           | identifier '[' expressao ']' '=' expressao
   41           | identifier '=' chamada_funcao

   42 expressao: identifier
   43          | identifier '[' expressao ']'
   44          | literal
   45          | logica
   46          | aritmetica

   47 literal: LIT_CHAR
   48        | LIT_STRING
   49        | LIT_FLOAT
   50        | LIT_FALSE
   51        | LIT_TRUE
   52        | LIT_INTEGER

   53 string: LIT_STRING

   54 aritmetica: '(' aritmetica ')'
   55           | expressao '+' expressao
   56           | expressao '-' expressao
   57           | expressao '*' expressao
   58           | expressao '/' expressao

   59 logica: '(' logica ')'
   60       | expressao OPERATOR_AND expressao
   61       | expressao OPERATOR_OR expressao
   62       | expressao OPERATOR_LE expressao
   63       | expressao OPERATOR_GE expressao
   64       | expressao OPERATOR_EQ expressao
   65       | expressao OPERATOR_NE expressao
   66       | expressao '<' expressao
   67       | expressao '>' expressao

   68 fluxo: KW_IF '(' expressao ')' KW_THEN bloco
   69      | KW_IF '(' expressao ')' KW_THEN bloco KW_ELSE bloco
   70      | KW_WHILE '(' expressao ')' bloco


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 30 32 35 54 59 68 69 70
')' (41) 11 30 32 35 54 59 68 69 70
'*' (42) 57
'+' (43) 55
',' (44) 13 37
'-' (45) 56
'/' (47) 58
';' (59) 7 8 18 20
'<' (60) 66
'=' (61) 39 40 41
'>' (62) 67
'[' (91) 8 40 43
']' (93) 8 40 43
'{' (123) 16
'}' (125) 16
error (256)
KW_INT (258) 9
KW_FLOAT (259)
KW_BOOL (260)
KW_CHAR (261) 10
KW_IF (262) 68 69
KW_THEN (263) 68 69
KW_ELSE (264) 69
KW_WHILE (265) 70
KW_DO (266)
KW_PRINT (267) 28 29 30 31 32
KW_RETURN (268) 33
KW_READ (269) 27
OPERATOR_LE (270) 62
OPERATOR_GE (271) 63
OPERATOR_EQ (272) 64
OPERATOR_NE (273) 65
OPERATOR_AND (274) 60
OPERATOR_OR (275) 61
TK_IDENTIFIER (276) 6
LIT_INTEGER (277) 8 52
LIT_FLOAT (278) 49
LIT_FALSE (279) 50
LIT_TRUE (280) 51
LIT_CHAR (281) 47
LIT_STRING (282) 48 53
TOKEN_ERROR (283)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
programa (45)
    on left: 1, on right: 0
statement_block (46)
    on left: 2 3, on right: 1 2
statement (47)
    on left: 4 5, on right: 2
identifier (48)
    on left: 6, on right: 7 8 11 15 27 35 36 37 39 40 41 42 43
declaracao (49)
    on left: 7 8, on right: 4
tipo (50)
    on left: 9 10, on right: 7 8 11 15
funcao (51)
    on left: 11, on right: 5
lista_parametros (52)
    on left: 12 13 14, on right: 11 13
parametro (53)
    on left: 15, on right: 12 13
bloco (54)
    on left: 16 17 18 19, on right: 11 68 69 70
bloco_comandos (55)
    on left: 20 21 22 23 24, on right: 16 20 22
comando (56)
    on left: 25 26 27 28 29 30 31 32 33 34, on right: 17 18 20 21
chamada_funcao (57)
    on left: 35, on right: 26 41
lista_param_chamada (58)
    on left: 36 37 38, on right: 35 37
atribuicao (59)
    on left: 39 40 41, on right: 25
expressao (60)
    on left: 42 43 44 45 46, on right: 31 32 33 39 40 43 55 56 57 58
    60 61 62 63 64 65 66 67 68 69 70
literal (61)
    on left: 47 48 49 50 51 52, on right: 44
string (62)
    on left: 53, on right: 29 30
aritmetica (63)
    on left: 54 55 56 57 58, on right: 28 46 54
logica (64)
    on left: 59 60 61 62 63 64 65 66 67, on right: 45 59
fluxo (65)
    on left: 68 69 70, on right: 19 22 23


state 0

    0 $accept: . programa $end

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 3 (statement_block)

    programa         go to state 3
    statement_block  go to state 4
    statement        go to state 5
    declaracao       go to state 6
    tipo             go to state 7
    funcao           go to state 8


state 1

    9 tipo: KW_INT .

    $default  reduce using rule 9 (tipo)


state 2

   10 tipo: KW_CHAR .

    $default  reduce using rule 10 (tipo)


state 3

    0 $accept: programa . $end

    $end  shift, and go to state 9


state 4

    1 programa: statement_block .

    $default  reduce using rule 1 (programa)


state 5

    2 statement_block: statement . statement_block

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 3 (statement_block)

    statement_block  go to state 10
    statement        go to state 5
    declaracao       go to state 6
    tipo             go to state 7
    funcao           go to state 8


state 6

    4 statement: declaracao .

    $default  reduce using rule 4 (statement)


state 7

    7 declaracao: tipo . identifier ';'
    8           | tipo . identifier '[' LIT_INTEGER ']' ';'
   11 funcao: tipo . identifier '(' lista_parametros ')' bloco

    TK_IDENTIFIER  shift, and go to state 11

    identifier  go to state 12


state 8

    5 statement: funcao .

    $default  reduce using rule 5 (statement)


state 9

    0 $accept: programa $end .

    $default  accept


state 10

    2 statement_block: statement statement_block .

    $default  reduce using rule 2 (statement_block)


state 11

    6 identifier: TK_IDENTIFIER .

    $default  reduce using rule 6 (identifier)


state 12

    7 declaracao: tipo identifier . ';'
    8           | tipo identifier . '[' LIT_INTEGER ']' ';'
   11 funcao: tipo identifier . '(' lista_parametros ')' bloco

    '('  shift, and go to state 13
    ';'  shift, and go to state 14
    '['  shift, and go to state 15


state 13

   11 funcao: tipo identifier '(' . lista_parametros ')' bloco

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 14 (lista_parametros)

    tipo              go to state 16
    lista_parametros  go to state 17
    parametro         go to state 18


state 14

    7 declaracao: tipo identifier ';' .

    $default  reduce using rule 7 (declaracao)


state 15

    8 declaracao: tipo identifier '[' . LIT_INTEGER ']' ';'

    LIT_INTEGER  shift, and go to state 19


state 16

   15 parametro: tipo . identifier

    TK_IDENTIFIER  shift, and go to state 11

    identifier  go to state 20


state 17

   11 funcao: tipo identifier '(' lista_parametros . ')' bloco

    ')'  shift, and go to state 21


state 18

   12 lista_parametros: parametro .
   13                 | parametro . ',' lista_parametros

    ','  shift, and go to state 22

    $default  reduce using rule 12 (lista_parametros)


state 19

    8 declaracao: tipo identifier '[' LIT_INTEGER . ']' ';'

    ']'  shift, and go to state 23


state 20

   15 parametro: tipo identifier .

    $default  reduce using rule 15 (parametro)


state 21

   11 funcao: tipo identifier '(' lista_parametros ')' . bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 11
    '{'            shift, and go to state 29

    $default  reduce using rule 34 (comando)

    identifier      go to state 30
    bloco           go to state 31
    comando         go to state 32
    chamada_funcao  go to state 33
    atribuicao      go to state 34
    fluxo           go to state 35


state 22

   13 lista_parametros: parametro ',' . lista_parametros

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 14 (lista_parametros)

    tipo              go to state 16
    lista_parametros  go to state 36
    parametro         go to state 18


state 23

    8 declaracao: tipo identifier '[' LIT_INTEGER ']' . ';'

    ';'  shift, and go to state 37


state 24

   68 fluxo: KW_IF . '(' expressao ')' KW_THEN bloco
   69      | KW_IF . '(' expressao ')' KW_THEN bloco KW_ELSE bloco

    '('  shift, and go to state 38


state 25

   70 fluxo: KW_WHILE . '(' expressao ')' bloco

    '('  shift, and go to state 39


state 26

   28 comando: KW_PRINT . aritmetica
   29        | KW_PRINT . string
   30        | KW_PRINT . '(' string ')'
   31        | KW_PRINT . expressao
   32        | KW_PRINT . '(' expressao ')'

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 45
    '('            shift, and go to state 46

    identifier  go to state 47
    expressao   go to state 48
    literal     go to state 49
    string      go to state 50
    aritmetica  go to state 51
    logica      go to state 52


state 27

   33 comando: KW_RETURN . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 55
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 28

   27 comando: KW_READ . identifier

    TK_IDENTIFIER  shift, and go to state 11

    identifier  go to state 57


state 29

   16 bloco: '{' . bloco_comandos '}'

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 11

    ';'       reduce using rule 34 (comando)
    '}'       reduce using rule 24 (bloco_comandos)
    '}'       [reduce using rule 34 (comando)]
    $default  reduce using rule 24 (bloco_comandos)

    identifier      go to state 30
    bloco_comandos  go to state 58
    comando         go to state 59
    chamada_funcao  go to state 33
    atribuicao      go to state 34
    fluxo           go to state 60


state 30

   35 chamada_funcao: identifier . '(' lista_param_chamada ')'
   39 atribuicao: identifier . '=' expressao
   40           | identifier . '[' expressao ']' '=' expressao
   41           | identifier . '=' chamada_funcao

    '('  shift, and go to state 61
    '['  shift, and go to state 62
    '='  shift, and go to state 63


state 31

   11 funcao: tipo identifier '(' lista_parametros ')' bloco .

    $default  reduce using rule 11 (funcao)


state 32

   17 bloco: comando .
   18      | comando . ';'

    ';'  shift, and go to state 64

    ';'       [reduce using rule 17 (bloco)]
    $default  reduce using rule 17 (bloco)


state 33

   26 comando: chamada_funcao .

    $default  reduce using rule 26 (comando)


state 34

   25 comando: atribuicao .

    $default  reduce using rule 25 (comando)


state 35

   19 bloco: fluxo .

    $default  reduce using rule 19 (bloco)


state 36

   13 lista_parametros: parametro ',' lista_parametros .

    $default  reduce using rule 13 (lista_parametros)


state 37

    8 declaracao: tipo identifier '[' LIT_INTEGER ']' ';' .

    $default  reduce using rule 8 (declaracao)


state 38

   68 fluxo: KW_IF '(' . expressao ')' KW_THEN bloco
   69      | KW_IF '(' . expressao ')' KW_THEN bloco KW_ELSE bloco

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 65
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 39

   70 fluxo: KW_WHILE '(' . expressao ')' bloco

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 66
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 40

   52 literal: LIT_INTEGER .

    $default  reduce using rule 52 (literal)


state 41

   49 literal: LIT_FLOAT .

    $default  reduce using rule 49 (literal)


state 42

   50 literal: LIT_FALSE .

    $default  reduce using rule 50 (literal)


state 43

   51 literal: LIT_TRUE .

    $default  reduce using rule 51 (literal)


state 44

   47 literal: LIT_CHAR .

    $default  reduce using rule 47 (literal)


state 45

   48 literal: LIT_STRING .
   53 string: LIT_STRING .

    $end           reduce using rule 48 (literal)
    $end           [reduce using rule 53 (string)]
    KW_INT         reduce using rule 48 (literal)
    KW_INT         [reduce using rule 53 (string)]
    KW_CHAR        reduce using rule 48 (literal)
    KW_CHAR        [reduce using rule 53 (string)]
    KW_IF          reduce using rule 48 (literal)
    KW_IF          [reduce using rule 53 (string)]
    KW_ELSE        reduce using rule 48 (literal)
    KW_ELSE        [reduce using rule 53 (string)]
    KW_WHILE       reduce using rule 48 (literal)
    KW_WHILE       [reduce using rule 53 (string)]
    KW_PRINT       reduce using rule 48 (literal)
    KW_PRINT       [reduce using rule 53 (string)]
    KW_RETURN      reduce using rule 48 (literal)
    KW_RETURN      [reduce using rule 53 (string)]
    KW_READ        reduce using rule 48 (literal)
    KW_READ        [reduce using rule 53 (string)]
    TK_IDENTIFIER  reduce using rule 48 (literal)
    TK_IDENTIFIER  [reduce using rule 53 (string)]
    ')'            reduce using rule 48 (literal)
    ')'            [reduce using rule 53 (string)]
    ';'            reduce using rule 48 (literal)
    ';'            [reduce using rule 53 (string)]
    '}'            reduce using rule 48 (literal)
    '}'            [reduce using rule 53 (string)]
    $default       reduce using rule 48 (literal)


state 46

   30 comando: KW_PRINT '(' . string ')'
   32        | KW_PRINT '(' . expressao ')'
   54 aritmetica: '(' . aritmetica ')'
   59 logica: '(' . logica ')'

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 45
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 67
    literal     go to state 49
    string      go to state 68
    aritmetica  go to state 69
    logica      go to state 70


state 47

   42 expressao: identifier .
   43          | identifier . '[' expressao ']'

    '['  shift, and go to state 71

    $default  reduce using rule 42 (expressao)


state 48

   31 comando: KW_PRINT expressao .
   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83

    $default  reduce using rule 31 (comando)


state 49

   44 expressao: literal .

    $default  reduce using rule 44 (expressao)


state 50

   29 comando: KW_PRINT string .

    $default  reduce using rule 29 (comando)


state 51

   28 comando: KW_PRINT aritmetica .
   46 expressao: aritmetica .

    $end           reduce using rule 28 (comando)
    $end           [reduce using rule 46 (expressao)]
    KW_INT         reduce using rule 28 (comando)
    KW_INT         [reduce using rule 46 (expressao)]
    KW_CHAR        reduce using rule 28 (comando)
    KW_CHAR        [reduce using rule 46 (expressao)]
    KW_IF          reduce using rule 28 (comando)
    KW_IF          [reduce using rule 46 (expressao)]
    KW_ELSE        reduce using rule 28 (comando)
    KW_ELSE        [reduce using rule 46 (expressao)]
    KW_WHILE       reduce using rule 28 (comando)
    KW_WHILE       [reduce using rule 46 (expressao)]
    KW_PRINT       reduce using rule 28 (comando)
    KW_PRINT       [reduce using rule 46 (expressao)]
    KW_RETURN      reduce using rule 28 (comando)
    KW_RETURN      [reduce using rule 46 (expressao)]
    KW_READ        reduce using rule 28 (comando)
    KW_READ        [reduce using rule 46 (expressao)]
    OPERATOR_LE    reduce using rule 46 (expressao)
    OPERATOR_GE    reduce using rule 46 (expressao)
    OPERATOR_EQ    reduce using rule 46 (expressao)
    OPERATOR_NE    reduce using rule 46 (expressao)
    OPERATOR_AND   reduce using rule 46 (expressao)
    OPERATOR_OR    reduce using rule 46 (expressao)
    TK_IDENTIFIER  reduce using rule 28 (comando)
    TK_IDENTIFIER  [reduce using rule 46 (expressao)]
    '+'            reduce using rule 46 (expressao)
    '-'            reduce using rule 46 (expressao)
    '*'            reduce using rule 46 (expressao)
    '/'            reduce using rule 46 (expressao)
    ';'            reduce using rule 28 (comando)
    ';'            [reduce using rule 46 (expressao)]
    '}'            reduce using rule 28 (comando)
    '}'            [reduce using rule 46 (expressao)]
    '<'            reduce using rule 46 (expressao)
    '>'            reduce using rule 46 (expressao)
    $default       reduce using rule 28 (comando)


state 52

   45 expressao: logica .

    $default  reduce using rule 45 (expressao)


state 53

   48 literal: LIT_STRING .

    $default  reduce using rule 48 (literal)


state 54

   54 aritmetica: '(' . aritmetica ')'
   59 logica: '(' . logica ')'

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 84
    literal     go to state 49
    aritmetica  go to state 69
    logica      go to state 70


state 55

   33 comando: KW_RETURN expressao .
   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83

    $default  reduce using rule 33 (comando)


state 56

   46 expressao: aritmetica .

    $default  reduce using rule 46 (expressao)


state 57

   27 comando: KW_READ identifier .

    $default  reduce using rule 27 (comando)


state 58

   16 bloco: '{' bloco_comandos . '}'

    '}'  shift, and go to state 85


state 59

   20 bloco_comandos: comando . ';' bloco_comandos
   21               | comando .

    ';'  shift, and go to state 86

    $default  reduce using rule 21 (bloco_comandos)


state 60

   22 bloco_comandos: fluxo . bloco_comandos
   23               | fluxo .

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 11

    ';'       reduce using rule 34 (comando)
    '}'       reduce using rule 23 (bloco_comandos)
    '}'       [reduce using rule 24 (bloco_comandos)]
    '}'       [reduce using rule 34 (comando)]
    $default  reduce using rule 23 (bloco_comandos)

    identifier      go to state 30
    bloco_comandos  go to state 87
    comando         go to state 59
    chamada_funcao  go to state 33
    atribuicao      go to state 34
    fluxo           go to state 60


state 61

   35 chamada_funcao: identifier '(' . lista_param_chamada ')'

    TK_IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 38 (lista_param_chamada)

    identifier           go to state 88
    lista_param_chamada  go to state 89


state 62

   40 atribuicao: identifier '[' . expressao ']' '=' expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 90
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 63

   39 atribuicao: identifier '=' . expressao
   41           | identifier '=' . chamada_funcao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier      go to state 91
    chamada_funcao  go to state 92
    expressao       go to state 93
    literal         go to state 49
    aritmetica      go to state 56
    logica          go to state 52


state 64

   18 bloco: comando ';' .

    $default  reduce using rule 18 (bloco)


state 65

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao
   68 fluxo: KW_IF '(' expressao . ')' KW_THEN bloco
   69      | KW_IF '(' expressao . ')' KW_THEN bloco KW_ELSE bloco

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    ')'           shift, and go to state 94
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83


state 66

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao
   70 fluxo: KW_WHILE '(' expressao . ')' bloco

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    ')'           shift, and go to state 95
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83


state 67

   32 comando: KW_PRINT '(' expressao . ')'
   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    ')'           shift, and go to state 96
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83


state 68

   30 comando: KW_PRINT '(' string . ')'

    ')'  shift, and go to state 97


state 69

   46 expressao: aritmetica .
   54 aritmetica: '(' aritmetica . ')'

    ')'  shift, and go to state 98

    ')'       [reduce using rule 46 (expressao)]
    $default  reduce using rule 46 (expressao)


state 70

   45 expressao: logica .
   59 logica: '(' logica . ')'

    ')'  shift, and go to state 99

    ')'       [reduce using rule 45 (expressao)]
    $default  reduce using rule 45 (expressao)


state 71

   43 expressao: identifier '[' . expressao ']'

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 100
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 72

   62 logica: expressao OPERATOR_LE . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 101
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 73

   63 logica: expressao OPERATOR_GE . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 102
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 74

   64 logica: expressao OPERATOR_EQ . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 103
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 75

   65 logica: expressao OPERATOR_NE . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 104
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 76

   60 logica: expressao OPERATOR_AND . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 105
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 77

   61 logica: expressao OPERATOR_OR . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 106
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 78

   55 aritmetica: expressao '+' . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 107
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 79

   56 aritmetica: expressao '-' . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 108
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 80

   57 aritmetica: expressao '*' . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 109
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 81

   58 aritmetica: expressao '/' . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 110
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 82

   66 logica: expressao '<' . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 111
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 83

   67 logica: expressao '>' . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 112
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 84

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83


state 85

   16 bloco: '{' bloco_comandos '}' .

    $default  reduce using rule 16 (bloco)


state 86

   20 bloco_comandos: comando ';' . bloco_comandos

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 11

    ';'       reduce using rule 34 (comando)
    '}'       reduce using rule 24 (bloco_comandos)
    '}'       [reduce using rule 34 (comando)]
    $default  reduce using rule 24 (bloco_comandos)

    identifier      go to state 30
    bloco_comandos  go to state 113
    comando         go to state 59
    chamada_funcao  go to state 33
    atribuicao      go to state 34
    fluxo           go to state 60


state 87

   22 bloco_comandos: fluxo bloco_comandos .

    $default  reduce using rule 22 (bloco_comandos)


state 88

   36 lista_param_chamada: identifier .
   37                    | identifier . ',' lista_param_chamada

    ','  shift, and go to state 114

    $default  reduce using rule 36 (lista_param_chamada)


state 89

   35 chamada_funcao: identifier '(' lista_param_chamada . ')'

    ')'  shift, and go to state 115


state 90

   40 atribuicao: identifier '[' expressao . ']' '=' expressao
   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    ']'           shift, and go to state 116
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83


state 91

   35 chamada_funcao: identifier . '(' lista_param_chamada ')'
   42 expressao: identifier .
   43          | identifier . '[' expressao ']'

    '('  shift, and go to state 61
    '['  shift, and go to state 71

    $default  reduce using rule 42 (expressao)


state 92

   41 atribuicao: identifier '=' chamada_funcao .

    $default  reduce using rule 41 (atribuicao)


state 93

   39 atribuicao: identifier '=' expressao .
   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83

    $default  reduce using rule 39 (atribuicao)


state 94

   68 fluxo: KW_IF '(' expressao ')' . KW_THEN bloco
   69      | KW_IF '(' expressao ')' . KW_THEN bloco KW_ELSE bloco

    KW_THEN  shift, and go to state 117


state 95

   70 fluxo: KW_WHILE '(' expressao ')' . bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 11
    '{'            shift, and go to state 29

    KW_IF          [reduce using rule 34 (comando)]
    KW_WHILE       [reduce using rule 34 (comando)]
    KW_PRINT       [reduce using rule 34 (comando)]
    KW_RETURN      [reduce using rule 34 (comando)]
    KW_READ        [reduce using rule 34 (comando)]
    TK_IDENTIFIER  [reduce using rule 34 (comando)]
    $default       reduce using rule 34 (comando)

    identifier      go to state 30
    bloco           go to state 118
    comando         go to state 32
    chamada_funcao  go to state 33
    atribuicao      go to state 34
    fluxo           go to state 35


state 96

   32 comando: KW_PRINT '(' expressao ')' .

    $default  reduce using rule 32 (comando)


state 97

   30 comando: KW_PRINT '(' string ')' .

    $default  reduce using rule 30 (comando)


state 98

   54 aritmetica: '(' aritmetica ')' .

    $default  reduce using rule 54 (aritmetica)


state 99

   59 logica: '(' logica ')' .

    $default  reduce using rule 59 (logica)


state 100

   43 expressao: identifier '[' expressao . ']'
   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    ']'           shift, and go to state 119
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83


state 101

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   62       | expressao OPERATOR_LE expressao .
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 62 (logica)]
    '>'       [reduce using rule 62 (logica)]
    $default  reduce using rule 62 (logica)


state 102

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   63       | expressao OPERATOR_GE expressao .
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 63 (logica)]
    '>'       [reduce using rule 63 (logica)]
    $default  reduce using rule 63 (logica)


state 103

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   64       | expressao OPERATOR_EQ expressao .
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 64 (logica)]
    '>'       [reduce using rule 64 (logica)]
    $default  reduce using rule 64 (logica)


state 104

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   65       | expressao OPERATOR_NE expressao .
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 65 (logica)]
    '>'       [reduce using rule 65 (logica)]
    $default  reduce using rule 65 (logica)


state 105

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   60       | expressao OPERATOR_AND expressao .
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE  shift, and go to state 72
    OPERATOR_GE  shift, and go to state 73
    OPERATOR_EQ  shift, and go to state 74
    OPERATOR_NE  shift, and go to state 75
    '+'          shift, and go to state 78
    '-'          shift, and go to state 79
    '*'          shift, and go to state 80
    '/'          shift, and go to state 81
    '<'          shift, and go to state 82
    '>'          shift, and go to state 83

    '<'       [reduce using rule 60 (logica)]
    '>'       [reduce using rule 60 (logica)]
    $default  reduce using rule 60 (logica)


state 106

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   61       | expressao OPERATOR_OR expressao .
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE  shift, and go to state 72
    OPERATOR_GE  shift, and go to state 73
    OPERATOR_EQ  shift, and go to state 74
    OPERATOR_NE  shift, and go to state 75
    '+'          shift, and go to state 78
    '-'          shift, and go to state 79
    '*'          shift, and go to state 80
    '/'          shift, and go to state 81
    '<'          shift, and go to state 82
    '>'          shift, and go to state 83

    '<'       [reduce using rule 61 (logica)]
    '>'       [reduce using rule 61 (logica)]
    $default  reduce using rule 61 (logica)


state 107

   55 aritmetica: expressao . '+' expressao
   55           | expressao '+' expressao .
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 55 (aritmetica)]
    '>'       [reduce using rule 55 (aritmetica)]
    $default  reduce using rule 55 (aritmetica)


state 108

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   56           | expressao '-' expressao .
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 56 (aritmetica)]
    '>'       [reduce using rule 56 (aritmetica)]
    $default  reduce using rule 56 (aritmetica)


state 109

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   57           | expressao '*' expressao .
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 57 (aritmetica)]
    '>'       [reduce using rule 57 (aritmetica)]
    $default  reduce using rule 57 (aritmetica)


state 110

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   58           | expressao '/' expressao .
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    '<'  shift, and go to state 82
    '>'  shift, and go to state 83

    '<'       [reduce using rule 58 (aritmetica)]
    '>'       [reduce using rule 58 (aritmetica)]
    $default  reduce using rule 58 (aritmetica)


state 111

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   66       | expressao '<' expressao .
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83

    OPERATOR_LE   [reduce using rule 66 (logica)]
    OPERATOR_GE   [reduce using rule 66 (logica)]
    OPERATOR_EQ   [reduce using rule 66 (logica)]
    OPERATOR_NE   [reduce using rule 66 (logica)]
    OPERATOR_AND  [reduce using rule 66 (logica)]
    OPERATOR_OR   [reduce using rule 66 (logica)]
    '+'           [reduce using rule 66 (logica)]
    '-'           [reduce using rule 66 (logica)]
    '*'           [reduce using rule 66 (logica)]
    '/'           [reduce using rule 66 (logica)]
    '<'           [reduce using rule 66 (logica)]
    '>'           [reduce using rule 66 (logica)]
    $default      reduce using rule 66 (logica)


state 112

   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao
   67       | expressao '>' expressao .

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83

    OPERATOR_LE   [reduce using rule 67 (logica)]
    OPERATOR_GE   [reduce using rule 67 (logica)]
    OPERATOR_EQ   [reduce using rule 67 (logica)]
    OPERATOR_NE   [reduce using rule 67 (logica)]
    OPERATOR_AND  [reduce using rule 67 (logica)]
    OPERATOR_OR   [reduce using rule 67 (logica)]
    '+'           [reduce using rule 67 (logica)]
    '-'           [reduce using rule 67 (logica)]
    '*'           [reduce using rule 67 (logica)]
    '/'           [reduce using rule 67 (logica)]
    '<'           [reduce using rule 67 (logica)]
    '>'           [reduce using rule 67 (logica)]
    $default      reduce using rule 67 (logica)


state 113

   20 bloco_comandos: comando ';' bloco_comandos .

    $default  reduce using rule 20 (bloco_comandos)


state 114

   37 lista_param_chamada: identifier ',' . lista_param_chamada

    TK_IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 38 (lista_param_chamada)

    identifier           go to state 88
    lista_param_chamada  go to state 120


state 115

   35 chamada_funcao: identifier '(' lista_param_chamada ')' .

    $default  reduce using rule 35 (chamada_funcao)


state 116

   40 atribuicao: identifier '[' expressao ']' . '=' expressao

    '='  shift, and go to state 121


state 117

   68 fluxo: KW_IF '(' expressao ')' KW_THEN . bloco
   69      | KW_IF '(' expressao ')' KW_THEN . bloco KW_ELSE bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 11
    '{'            shift, and go to state 29

    KW_IF          [reduce using rule 34 (comando)]
    KW_WHILE       [reduce using rule 34 (comando)]
    KW_PRINT       [reduce using rule 34 (comando)]
    KW_RETURN      [reduce using rule 34 (comando)]
    KW_READ        [reduce using rule 34 (comando)]
    TK_IDENTIFIER  [reduce using rule 34 (comando)]
    $default       reduce using rule 34 (comando)

    identifier      go to state 30
    bloco           go to state 122
    comando         go to state 32
    chamada_funcao  go to state 33
    atribuicao      go to state 34
    fluxo           go to state 35


state 118

   70 fluxo: KW_WHILE '(' expressao ')' bloco .

    $default  reduce using rule 70 (fluxo)


state 119

   43 expressao: identifier '[' expressao ']' .

    $default  reduce using rule 43 (expressao)


state 120

   37 lista_param_chamada: identifier ',' lista_param_chamada .

    $default  reduce using rule 37 (lista_param_chamada)


state 121

   40 atribuicao: identifier '[' expressao ']' '=' . expressao

    TK_IDENTIFIER  shift, and go to state 11
    LIT_INTEGER    shift, and go to state 40
    LIT_FLOAT      shift, and go to state 41
    LIT_FALSE      shift, and go to state 42
    LIT_TRUE       shift, and go to state 43
    LIT_CHAR       shift, and go to state 44
    LIT_STRING     shift, and go to state 53
    '('            shift, and go to state 54

    identifier  go to state 47
    expressao   go to state 123
    literal     go to state 49
    aritmetica  go to state 56
    logica      go to state 52


state 122

   68 fluxo: KW_IF '(' expressao ')' KW_THEN bloco .
   69      | KW_IF '(' expressao ')' KW_THEN bloco . KW_ELSE bloco

    KW_ELSE  shift, and go to state 124

    KW_ELSE   [reduce using rule 68 (fluxo)]
    $default  reduce using rule 68 (fluxo)


state 123

   40 atribuicao: identifier '[' expressao ']' '=' expressao .
   55 aritmetica: expressao . '+' expressao
   56           | expressao . '-' expressao
   57           | expressao . '*' expressao
   58           | expressao . '/' expressao
   60 logica: expressao . OPERATOR_AND expressao
   61       | expressao . OPERATOR_OR expressao
   62       | expressao . OPERATOR_LE expressao
   63       | expressao . OPERATOR_GE expressao
   64       | expressao . OPERATOR_EQ expressao
   65       | expressao . OPERATOR_NE expressao
   66       | expressao . '<' expressao
   67       | expressao . '>' expressao

    OPERATOR_LE   shift, and go to state 72
    OPERATOR_GE   shift, and go to state 73
    OPERATOR_EQ   shift, and go to state 74
    OPERATOR_NE   shift, and go to state 75
    OPERATOR_AND  shift, and go to state 76
    OPERATOR_OR   shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83

    $default  reduce using rule 40 (atribuicao)


state 124

   69 fluxo: KW_IF '(' expressao ')' KW_THEN bloco KW_ELSE . bloco

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_PRINT       shift, and go to state 26
    KW_RETURN      shift, and go to state 27
    KW_READ        shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 11
    '{'            shift, and go to state 29

    KW_IF          [reduce using rule 34 (comando)]
    KW_WHILE       [reduce using rule 34 (comando)]
    KW_PRINT       [reduce using rule 34 (comando)]
    KW_RETURN      [reduce using rule 34 (comando)]
    KW_READ        [reduce using rule 34 (comando)]
    TK_IDENTIFIER  [reduce using rule 34 (comando)]
    $default       reduce using rule 34 (comando)

    identifier      go to state 30
    bloco           go to state 125
    comando         go to state 32
    chamada_funcao  go to state 33
    atribuicao      go to state 34
    fluxo           go to state 35


state 125

   69 fluxo: KW_IF '(' expressao ')' KW_THEN bloco KW_ELSE bloco .

    $default  reduce using rule 69 (fluxo)
